// 0과 1로 이루어진 수 -> 이진수

// 이친수
// 1. 0으로 시작하지 않는다.
// 2. 1이 연속 2번 나오지 않는다.

// N  1~90 -> N자리 이친수

// D[N][i]: N자리 이친수 중 i로 끝나는 수의 개수 (i = 0,1)
// D[N][0] = D[N-1][0] + D[N-1][1]
// D[N][1] = D[N-1][0]

// D[1][0] = 0 //
// D[1][1] = 1 // 1
// D[2][0] = 1 // 10
// D[2][1] = 0
// D[3][0] = 1 // 100
// D[3][1] = 1 // 101
// D[4][0] = 2 // 1000 1010
// D[4][1] = 1 // 1001
import Foundation

let N = Int(readLine()!)!
var D = Array(repeating: [0,0], count: N+1)
if N == 1 {
    print(1)
    exit(0)
}

D[1][0] = 0
D[1][1] = 1
for i in 2...N {
    D[i][0] = D[i-1][0] + D[i-1][1]
    D[i][1] = D[i-1][0]
}
print(D[N][0] + D[N][1])
